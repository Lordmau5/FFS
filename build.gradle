buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}

plugins {
//    id 'com.matthewprenger.cursegradle' version '1.0.5'
}

apply plugin: 'java'
apply plugin: 'net.minecraftforge.gradle.forge'

sourceSets {
  main {
    java {
      srcDir 'src/main/java'
    }
    resources {
      srcDir 'src/main/resources'
    }
  }
}

idea {
  module.inheritOutputDirs = true
}

repositories {
    mavenCentral()
    maven { // HWYLA / Tehnut's maven
        name "tehnut"
        url "http://tehnut.info/maven"
    }
    maven { // Chisel / tterrag's maven
        name "tterrag"
        url "http://maven.tterrag.com/"
    }
    maven {
        name 'CoFH Maven'
        url "http://maven.covers1624.net"
    }
    maven { // IC2 / Player's maven
        name "player"
        url "http://maven.ic2.player.to/"
    }
    flatDir {
      dirs "libs"
    }
}

dependencies {
    deobfCompile "net.industrial-craft:industrialcraft-2:2.8.108-ex112"

    deobfCompile "mcjty.theoneprobe:TheOneProbe-1.12:1.12-1.4.23-16"

    deobfCompile "mcp.mobius.waila:Hwyla:1.8.26-B41_1.12.2"
}

if (System.env.BUILD_NUMBER != null) mod_version = "$mod_version"

group = 'lordmau5.ffs'
version = "$minecraft_version-$mod_version"
archivesBaseName = "Fancy Fluid Storage"

sourceCompatibility = 1.8
targetCompatibility = 1.8

minecraft {
    runDir = "runtime/client"
    version = "$minecraft_version-$forge_version"
    mappings = "snapshot_20170620"
}

processResources {
    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

task deobfJar(type: Jar, dependsOn: 'jar') {
    from sourceSets.main.output
    classifier = 'deobf'
}

artifacts {
    archives sourceJar, deobfJar
}
